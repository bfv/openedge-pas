name: CI Dev

on: 
  push:
    paths-ignore:
      - 'README.md'
      - '.github/workflows/ci-prod.yaml'
      - '.github/workflows/copytag.yaml'
      - '.github/workflows/publish-prod.yaml'
      - 'oeablSecurity-prod.csv'
      - 'DockerfileProd'
      - 'DockerfileProdCI'
  workflow_dispatch:

permissions:
  contents: read
  packages: read
      
jobs:
  build:
    
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        version: [ 12.8.3 ]
    
    steps:

      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11  # v4.1.1
        with:
          path: src

      - name: Get version info
        run: |
          v=${{matrix.version}}
          flatversion=`echo ${v%\.*} | sed "s/\.//g"`
          echo flattened minor version: $flatversion
          echo "FLATVERSION=${flatversion}" >> $GITHUB_ENV
          echo "OPENEDGE_VERSION=${{matrix.version}}" >> $GITHUB_ENV

      - name: Insert JDK version in Dockerfile (dev)
        run: |
          jdk=`jq -r ".jdk${FLATVERSION}" src/jdk-versions.json`
          echo JDK: $jdk
          sed -i "s/JDKVERSION/$jdk/g" src/DockerfileDev
          echo download jdk from DockerfileDev:
          cat src/DockerfileDev | grep temurin
  
      - name: Download installer files
        run: |
          docker run -v ${PWD}/src:/target devbfvio/oeinstaller:${{env.OPENEDGE_VERSION}}
      
      - name: Get response.ini  # get progress.cfg from secret PROGRESS_CFG_122
        run: |
          echo fetching response.ini/progress.cfg from secret RESPONSE_INI_${{env.FLATVERSION}}
          echo "${{ secrets[format('RESPONSE_INI_{0}', env.FLATVERSION)] }}" > src/response.ini
          echo "${{ secrets[format('PROGRESS_CFG_{0}', env.FLATVERSION)] }}" | base64 --decode > src/progress.cfg
          ls -l src

      - name: Build docker image
        run: |
          cd src
          docker build -f DockerfileDev -t openedge-pas:${{env.OPENEDGE_VERSION}} .
      
      - name: Setup test container
        run: |
          cd src
          #ls -l 
          docker run \
            -d \
            --name pas \
            -v ./4gl:/app/src \
            -v ./progress.cfg:/usr/dlc/progress.cfg \
            -p 8810:8810 \
            --env PASWEBHANDLERS=/app/src/ROOT.handlers \
            openedge-pas:${{env.OPENEDGE_VERSION}} \
            /app/pas/start.sh
          echo starting PAS...
      
      # Wait for PAS to start
      - name: Wait 10 seconds
        uses: GuillaumeFalourd/wait-sleep-action@175a644657d8de245e4c6059d014941646186a84  # v1
        with:
          time: '10'

      - name: Execute tests
        run: |
          curl http://localhost:8810/web/api > result.txt
          cat result.txt 
          grep -Fxq "OK" result.txt

      - name: Remove installer files
        run: |
          cd src
          rm -f PROGRESS_*
          rm response.ini
          rm progress.cfg
          ls -l 

