name: Publish dev image

on:
  workflow_dispatch:
    inputs:
      openedgeversion:
        type: string
        description: "enter OpenEdge version (x.y.z, f.e. 12.8.8)"
        default: "12.8.8"
        required: true
      imagetag:
        type: string
        description: "enter tag for image"
        default: "latest"
        required: true
              
run-name: publish DEV openedge-pas ${{ inputs.openedgeversion }} to openedge-pas:${{ github.event.inputs.imagetag }}-dev

jobs:
  publish:

    runs-on: ubuntu-latest

    steps:
      - name: display info
        run: |
          echo openedge version: ${{ github.event.inputs.openedgeversion }}
          echo publish openedge-db:${{ github.event.inputs.imagetag }}
          # echo target registry: ${{ github.event.inputs.targetregistry }}
          echo image prefix: ${{ vars.IMAGE_PREFIX }}
    
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11  # v4.1.1
        with:
          path: src
  
      - name: Get OpenEdge version
        id: get-oeversion
        uses: bfv/openedge-flatversion@49ecdca1670447fcf715c0b505607ec17dc59b62  # v1.2.1
        with:
          version: ${{ inputs.openedgeversion }}
  
      - name: Version to env
        run: |
          echo "FLATVERSION=${{ steps.get-oeversion.outputs.flat-version }}" >> $GITHUB_ENV
          echo "OPENEDGE_VERSION=${{ inputs.openedgeversion }}" >> $GITHUB_ENV
          echo "OPENEDGE_BASE_VERSION=${{ steps.get-oeversion.outputs.base-version }}" >> $GITHUB_ENV
          echo "IMAGE_NAME=${{ vars.REGISTRY_DOMAIN }}/${{ vars.IMAGE_PREFIX}}openedge-pas:${{ github.event.inputs.imagetag }}-dev" >> $GITHUB_ENV
          
      - name: Insert JDK version in Dockerfile (dev)
        run: |
          jdk=`jq -r ".jdk${FLATVERSION}" src/jdk-versions.json`
          echo JDK: $jdk
          sed -i "s/JDKVERSION/$jdk/g" src/DockerfileDev
          echo download jdk from DockerfileDev:
          cat src/DockerfileDev | grep temurin
      
      - name: Download installer files
        run: |
          src/scripts/download-openedge.sh
        
      - name: Get response.ini  # get progress.cfg from secret PROGRESS_CFG_122
        run: |
          echo fetching response.ini/progress.cfg from secret RESPONSE_INI_${{env.FLATVERSION}}
          echo "${{ secrets[format('RESPONSE_INI_{0}', env.FLATVERSION)] }}" > src/response.ini
          echo "${{ secrets[format('PROGRESS_CFG_{0}', env.FLATVERSION)] }}" | base64 --decode > src/progress.cfg
          ls -l src

      - name: Build docker image
        run: |
          cd src
          docker build -f DockerfileDev -t ${{env.IMAGE_NAME}} .

      - name: Remove installer files
        run: |
          cd src
          rm -f PROGRESS_*
          rm response.ini
          ls -l 
      
      - name: Login to registry
        uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20  # v3.1.0
        with:
          registry: ${{ vars.REGISTRY_DOMAIN }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      
      - name: Push image to registry
        run: |
          docker push ${{env.IMAGE_NAME}}
